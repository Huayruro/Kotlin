https://maker.pro/arduino/tutorial/how-to-use-arduino-with-robot-operating-system-ros
https://programmerclick.com/article/49684057763/ <--



----------------------

sudo apt-get install ros-noetic-rosserial
sudo apt-get install ros-noetic-rosserial-arduino

Linux
To install the Arduino IDE 2 on Linux, first download the AppImage 64 bits (X86-64) from the Arduino Software page.
https://www.arduino.cc/en/software
Before we can launch the editor, we need to first make it an executable file. This is done by:

right-click the file,
choose Properties,
select Permissions tab,
tick the Allow executing file as program box.

a. Poner la placa de desarrollo de Arduino USB a la computadora

b. Ingrese a Arduino en la terminal para abrir el IDE

c. Abra las opciones de la herramienta, seleccione la placa de desarrollo correspondiente y el puerto serie de comunicación

d. Abra las opciones del archivo, seleccione Ejemplo-> 01.Basics-> Blink
e. Compilación y carga de parpadeo, si no hay error, y las pequeñas luces del flash de la placa Arduino, demuestra que la instalación de IDE es exitosa.


. Install the ros_lib package in the IDE.

a. The easiest way to install the package is from the Arduino IDE itself. Navigate to Sketch > Include Library > Manage Library in the IDE and search for rosserial package


Start the ROS Master - roscore
Run rosserial client on the machine - rosrun rosserial_python serial_node.py /dev/tty<USB# or ACM#>
The serial port is determined at run time for either ttyUSB or ttyACM. The exact port number can be found from the Arduino IDE or using dmesg | grep tty.
Read published data returning if the button is pressed on the Arduino board or not - rostopic echo button_press
Publish data to toggle the LED connected on the Arduino - rostopic pub toggle_led std_msgs/UInt16 "data: 0" The data is “0” to switch off the LED and “1” to switch on the LED.

Use multiple terminal tabs to execute instructions and observe the response in the same screen
